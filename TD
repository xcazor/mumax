# Define the simulation parameters
setparams( 
  Ms = 800e3, # Saturation magnetization of the material (A/m)
  Aex = 8e-12, # Exchange stiffness constant (J/m)
  simcell = [50e-9 50e-9 5e-9], # Simulation cell size (m)
  damping = 0.5, # Gilbert damping coefficient
  dt = 1e-12 # Simulation timestep (s)
)

# Define the material geometry
addrect( 
  material = 'Py', # Material is permalloy
  l = [50e-9 50e-9 5e-9], # Length, width, and thickness of the rectangular sample
  pos = [0 0 0] # Position of the center of the sample in the simulation cell
)

# Set the initial magnetization state
setmag( 
  uniform([0 0 1]), # Uniform magnetization pointing in the +z direction
  regions = rect([0 0 0], [50e-9 50e-9 5e-9]) # Apply to the entire sample
)

# Apply an external field to create a vortex state
addfield( 
  rect([0 0 0], [50e-9 50e-9 5e-9]), # Apply to the entire sample
  Hext = [0 0 30e3], # External field in the +z direction
  alpha = 0.5 # Slonczewski spin-transfer torque parameter
)

# Simulate the dynamics of the vortex state
run(
  until = 20e-9, # Simulation time
  save = at('every 1e-12', 'averages'), # Save the magnetization state every picosecond and calculate the average magnetization
  relax = 0 # Don't relax the magnetization before starting the dynamics simulation
)

# Calculate the toroidal moment
mag = loadtable('averages.ovf')
mx = mag.mx
my = mag.my
mz = mag.mz
tx = mx .* (2*my.*mz) ./ (mx.^2 + my.^2 + mz.^2)
ty = my .* (2*mx.*mz) ./ (mx.^2 + my.^2 + mz.^2)
tz = (mx.^2 + my.^2 - mz.^2) ./ (mx.^2 + my.^2 + mz.^2)
toroidal_moment = [mean(tx) mean(ty) mean(tz)]
